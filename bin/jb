#!/usr/bin/env node
forever = require("forever");
exec = require("child_process").exec
function execute_command(commands){
  var command = process.argv[2];
  if(Object.keys(commands).indexOf(command) !== -1){
    commands[command]();
  } else {
    commands.help();
  }
}
// jb start -p 3030 -c jb_conf
commands = {
  start:function(port){
    var port = process.argv[3] || 80;
    exec("forever start --pidfile /var/run/job_board.pid -l /var/log/job_board.log " + __dirname + "/../job_board.js " + port, function(error){
      if(!error) {
        console.log("JobBoard Started running on port " + port +".");
      } else {
        console.log("ERROR: Job Board could not start: " + error);
      }
    });

    
  },
  
  stop:function(){
    exec("forever stop " + __dirname + "/../job_board.js", function(error){
      if(!error) {
        console.log("JobBoard got a pink slip.");
      } else {
        console.log("ERROR: Job Board could not quit: " + error);
      }
    });
  },

  restart:function(port){
    exec("forever restart " + __dirname + "/../job_board.js", function(error){
      if(!error) {
        console.log("JobBoard Rebooted Succesfully.");
      } else {
        console.log("ERROR: Job Board restart fail: " + error);
      }
    });
  },
  
  ls:function(){
    console.log('KEY : QUEUE');
    console.log('we-r-1.org 8');
    console.log('events.ran.org 4');
    console.log('app.learn.radicaldesigns.org 0');
  },
  
  add:function(){
    var slug = process.argv[3];
    var endpoint = process.argv[4];
    console.log('added '+slug+' pointed at'+endpoint);
  },
  
  remove:function(){
    var slug = process.argv[3];
  },
  
  rewind:function(){},
  
  help:function(){
  	console.log('LIST OF COMMANDS');
    console.log('start <port>');
    console.log('stop');
    console.log('add <key> <end_point> -c <concurrency> -p');
    console.log('ls');
    console.log('update');
    console.log('remove');
    console.log('rewind');
    console.log('help');
  }
}

execute_command(commands);
